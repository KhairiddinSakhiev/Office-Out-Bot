import logging
import telegram


from datetime import datetime, timedelta

from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import ContextTypes, ApplicationBuilder, CommandHandler, MessageHandler, filters

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

permissionTitle = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫–æ–ª–ª–µ–≥–∞! –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —è –≤—Å–µ –ø–µ—Ä–µ–¥–∞–º –∫–∞–¥—Ä–∞–º, –≤—ã—Ö–æ–¥–∏—Ç–µ, –ø—Ä–æ—Å–ø–∞–ª–∏ –∏ —Ç–¥, –≤—Å–µ –ø–µ—Ä–µ–¥–∞–º :)) –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –∑–∞ —ç—Ç–æ —É –Ω–∞—Å –Ω–µ —Ä—É–≥–∞—é—Ç üòâ'

permissions = [
    'üò¨ –û–ø–æ–∑–¥–∞—é',
    'üè¢ –í –æ—Ñ–∏—Å–µ, –Ω–æ –æ–ø–æ–∑–¥–∞–ª',
    'üëî –ü–æ –¥–µ–ª–∞–º –æ—Ñ–∏—Å–∞',
    'üö´ –ù–µ —Å–º–æ–≥—É –ø—Ä–∏–π—Ç–∏',
    'üèÉüèº‚Äç –ü–æ –ª–∏—á–Ω—ã–º –¥–µ–ª–∞–º',
    'üè† –†–∞–±–æ—Ç–∞—é –∏–∑ –¥–æ–º–∞'
]

permissions_for_sql = [
    '–û–ø–æ–∑–¥–∞—é',
    '–í –æ—Ñ–∏—Å–µ, –Ω–æ –æ–ø–æ–∑–¥–∞–ª',
    '–ü–æ –¥–µ–ª–∞–º –æ—Ñ–∏—Å–∞',
    '–ù–µ —Å–º–æ–≥—É –ø—Ä–∏–π—Ç–∏',
    '–ü–æ –ª–∏—á–Ω—ã–º –¥–µ–ª–∞–º',
    '–†–∞–±–æ—Ç–∞—é –∏–∑ –¥–æ–º–∞'
]

days = [
    '–°–µ–≥–æ–¥–Ω—è',
    '–ó–∞–≤—Ç—Ä–æ',
    '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
]

reasons = [
    {
        'name': 'üò¨ –û–ø–æ–∑–¥–∞—é',
        'title': '–ù–µ —Ö–æ—Ä–æ—à–æ —ç—Ç–æ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å, –¥–∞–≤–∞–π—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–ø–æ–∑–¥–∞–Ω–∏—è, –≤—Å–µ —Ç–∞–∫–∏ –º—ã –ª—é–¥–∏, –≤—Å—è–∫–æ–µ –±—ã–≤–∞–µ—Ç, –ø–æ–Ω–∏–º–∞–µ–º üòâ',
        'list': [
            '–ü—Ä–æ—Å–ø–∞–ª, –¥–æ—Å–º–æ—Ç—Ä–µ–ª —Å–æ–Ω',
            '–ü—Ä–æ–±–∫–∏',
            '–£–Ω–∏–≤–µ—Ä –∑–∞–≤–µ—Ç',
            '–ë—ã–ª —É –≤—Ä–∞—á–∞',
            '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    },
    {
        'name': 'üè¢ –í –æ—Ñ–∏—Å–µ, –Ω–æ –æ–ø–æ–∑–¥–∞–ª',
        'title': '–ê –º—ã –¥—É–º–∞–ª–∏ –≤—ã –Ω–µ –Ω–∞–ø–∏—à–∏—Ç–µ)) –®—É—á—É, –∫–∞–∫–æ–≤–∞ –ø—Ä–∏—á–∏–Ω–∞ –æ–ø–æ–∑–¥–∞–Ω–∏—è?',
        'list': [
            '–ü—Ä–æ—Å–ø–∞–ª, –¥–æ—Å–º–æ—Ç—Ä–µ–ª —Å–æ–Ω',
            '–ì–∞–∏—à–Ω–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª',
            '–ü—Ä–æ–±–∫–∏',
            '–£–Ω–∏–≤–µ—Ä –∑–∞–≤–µ—Ç',
            '–ë—ã–ª —É –≤—Ä–∞—á–∞',
            '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    },
    {
        'name': 'üëî –ü–æ –¥–µ–ª–∞–º –æ—Ñ–∏—Å–∞',
        'title': '–ö—Ä—É—Ç–æ, –∑–∞–æ–¥–Ω–æ —Å–≤–µ–∂–∏–º –≤–æ–∑–¥—É—Ö–æ–º –ø–æ–¥—ã—à–∏—Ç–µ, —É–≤–∏–¥–∏—Ç–µ –º–∏—ÄüòÖ',
        'list': [
            '–ï–¥—É –∫ –ø–∞—Ä—Ç–Ω–µ—Ä—É',
            '–ï–¥—É –∫—É–ø–∏—Ç —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ñ–∏—Å–∞',
            '–ù—É–∂–Ω–æ –≤ –Ω–∞–ª–æ–≥–æ–≤—É—é',
            '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    },
    {
        'name': 'üö´ –ù–µ —Å–º–æ–≥—É –ø—Ä–∏–π—Ç–∏',
        'title': '–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ? –ü–æ—á–µ–º—É –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏?',
        'list': [
            '–ü–æ –¥–æ–º–∞—à–Ω–∏–º –¥–µ–ª–∞–º',
            '–≠–∫–∑–∞–º–µ–Ω',
            '–£—Å—Ç–∞–ª —á—É—Ç—å –æ—Ç–¥–æ—Ö–Ω—É',
            '–£–Ω–∏–≤–µ—Ä –∑–∞–≤–µ—Ç',
            '–ü–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è',
            '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    },
    {
        'name': 'üèÉ‚Äç‚ôÇ –ü–æ –ª–∏—á–Ω—ã–º –¥–µ–ª–∞–º',
        'title': '–ü–æ–Ω—è–ª–∏! –ü—Ä–∏–º–µ—Ä–Ω–æ –≤–æ —Å–∫–æ–ª—å–∫–æ –≤–µ—Ä–Ω–µ—Ç–µ—Å—å? –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—ã:',
        'list': []
    },
    {
        'name': 'üè† –†–∞–±–æ—Ç–∞—é –∏–∑ –¥–æ–º–∞',
        'title': '–î–∞–∞ –¥–æ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç—Å—è —á—É–¥–µ—Å–Ω–æ? –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—ã:',
        'list': []
    }
]

endTime = [
    {
        'name': 'hour',
        'title': '–ê –≤–æ —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–Ω–µ—Ç–µ —Ä–∞–±–æ—Ç—É? –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—ã:',
        'title1': '–í–æ —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–∏ —Ä–∞–±–æ—Ç—É? –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—ã:',
        'title2': '–ü—Ä–∏–º–µ—Ä–Ω–æ –≤–æ —Å–∫–æ–ª—å–∫–æ –≤–µ—Ä–Ω–µ—Ç–µ—Å—å? –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—ã:',
        'list': [
            '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    },
    {
        'name': 'minute',
        'title': '–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω—É—Ç—ã',
        'list': [
            '00', '05', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è'
        ]
    }
]

approval = {
    'permission': '',
    'reason': '',
    'timeHour': '',
    'timeMinute': '',
    'fullName': '',
    'account': '',
}

chats = {}


async def getPermissionBill(bill):
    text = bill['permission']

    if bill['reason'] != '':
        text = bill['reason']

    date = datetime.now()
    if bill['timeHour'] == '–°–µ–≥–æ–¥–Ω—è':
        text += '\n' + date.strftime('%d.%m.%Y')
    elif bill['timeHour'] == '–ó–∞–≤—Ç—Ä–æ':
        date += timedelta(1)
        text += '\n' + date.strftime('%d.%m.%Y')
    else:
        text += '\n' + bill['timeHour'] + ":" + bill['timeMinute']

    if bill['permission'] == permissions_for_sql[0]:
        text += '\n\n–•–æ—Ä–æ—à–æ, –º—ã –≤–∞—Å –∂–¥–∞—Ç—å –±—É–¥–µ–º, –≤—Å—Ç—Ä–µ—Ç–∏–º —É –¥–≤–µ—Ä–∏üòâ'

    elif bill['permission'] == permissions_for_sql[1]:
        text += '\n\n–•–æ—Ä–æ—à–æ, –≤–ø—Ä–µ–¥—å –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å –∑–∞—Ä–∞–Ω–µ–µ.'

    elif bill['permission'] == permissions_for_sql[2]:
        text += '\n\n–•–æ—Ä–æ—à–æ, –±–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è üòâ'

    elif bill['permission'] == permissions_for_sql[3]:
        text += '\n\n–•–æ—Ä–æ—à–æ, –ø—Ä–∏–Ω—è–ª–∏'

    elif bill['permission'] == permissions_for_sql[4]:
        text += '\n\n–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ'

    elif bill['permission'] == permissions_for_sql[5]:
        text += '\n\n–í—Å–µ –ø—Ä–∏–Ω—è–ª–∏, —Å–ø–∞—Å–∏–±–æ, —É–¥–∞—á–∏üòâ'

    return text


async def sendReceipt(update, context, chat_id):
    keyboard = [[telegram.KeyboardButton(permission)] for permission in permissions]
    text = await getPermissionBill(chats[chat_id])

    chats[chat_id] = {
        'permission': '',
        'reason': '',
        'timeHour': '',
        'timeMinute': '',
        'fullName': '',
        'account': '',
    }


    await send_message_to_bot(chat_id, text, keyboard, context)


async def inform(user):
    date = datetime.now()
    if user['timeHour'] == '–°–µ–≥–æ–¥–Ω—è':
        date = date.replace(hour=23, minute=59)

    elif user['timeHour'] == '–ó–∞–≤—Ç—Ä–æ':
        date += timedelta(1)
        date = date.replace(hour=23, minute=59)

    else:
        date = date.replace(hour=int(user['timeHour']), minute=int(user['timeMinute']))

    # sql = "INSERT INTO history (user, teleg_account, permission, reason, untill, date) VALUES (%s, %s, %s, %s, %s, %s)"
    val = (user['fullName'], user['account'], user['permission'], user['reason'], date, datetime.now())
    
    
    import requests
    import json
    
    data = json.dumps(val)
    
    response = requests.post("django:8000", json=data)
    
    print(response.status_code)
    


async def send_message_to_bot(chat_id, text, keyboard, context):
    await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=ReplyKeyboardMarkup(keyboard)
    )


async def getTime(update, context):
    chat_id = str(update.effective_chat.id)

    if chats[chat_id]['timeHour'] == '':
        chats[chat_id]['timeHour'] = update.message.text
        chats[chat_id]['account'] = update.effective_user.name
        chats[chat_id]['fullName'] = update.effective_user.full_name

        if chats[chat_id]['permission'] == permissions_for_sql[3]:
            chats[chat_id]['timeMinute'] = update.message.text
            # Save permission to Database
            await inform(chats[chat_id])

            # Refresh Bot
            await sendReceipt(update, context, chat_id)
        else:
            keyboard = [[telegram.KeyboardButton(minute)] for minute in endTime[1]['list']]
            # Ask bot about minute
            await send_message_to_bot(chat_id, endTime[1]['title'], keyboard, context)

    else:
        chats[chat_id]['timeMinute'] = update.message.text
        # Save permission to Database
        await inform(chats[chat_id])
        # Refresh Bot
        await sendReceipt(update, context, chat_id)


async def getPermission(update, context):
    keyboard = [[telegram.KeyboardButton(permission)] for permission in permissions]
    text = permissionTitle
    chat_id = str(update.effective_chat.id)

    if update.message.text == permissions[0]:
        chats[chat_id]['permission'] = permissions_for_sql[0]
        keyboard = [[telegram.KeyboardButton(reason)] for reason in reasons[0]['list']]
        text = reasons[0]['title']

    elif update.message.text == permissions[1]:
        chats[chat_id]['permission'] = permissions_for_sql[1]
        keyboard = [[telegram.KeyboardButton(reason)] for reason in reasons[1]['list']]
        text = reasons[1]['title']

    elif update.message.text == permissions[2]:
        chats[chat_id]['permission'] = permissions_for_sql[2]
        keyboard = [[telegram.KeyboardButton(reason)] for reason in reasons[2]['list']]
        text = reasons[2]['title']

    elif update.message.text == permissions[3]:
        chats[chat_id]['permission'] = permissions_for_sql[3]
        keyboard = [[telegram.KeyboardButton(reason)] for reason in reasons[3]['list']]
        text = reasons[3]['title']

    elif update.message.text == permissions[4]:
        chats[chat_id]['permission'] = permissions_for_sql[4]
        keyboard = [[telegram.KeyboardButton(hour)] for hour in endTime[0]['list']]
        text = reasons[4]['title']

    elif update.message.text == permissions[5]:
        chats[chat_id]['permission'] = permissions_for_sql[5]
        keyboard = [[telegram.KeyboardButton(hour)] for hour in endTime[0]['list']]
        text = reasons[5]['title']

    await send_message_to_bot(chat_id, text, keyboard, context)


async def messageHandler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = str(update.effective_chat.id)
    if chats.get(chat_id) is None:
        chats[chat_id] = {
            'permission': '',
            'reason': '',
            'timeHour': '',
            'timeMinute': '',
            'fullName': '',
            'account': ''
        }

    # Get permission from user
    if chats[chat_id]['permission'] == '' or update.message.text == '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—å—è':
        await getPermission(update, context)

    # If permission has reason, ask it
    elif (chats[chat_id]['permission'] == permissions_for_sql[0] or chats[chat_id]['permission'] == permissions_for_sql[1] or
        chats[chat_id]['permission'] == permissions_for_sql[2]) and chats[chat_id]['reason'] == '':
        chats[chat_id]['reason'] = update.message.text
        keyboard = [[telegram.KeyboardButton(hour)] for hour in endTime[0]['list']]
        text = endTime[0]['title']

        # If permission passed, change question
        if chats[chat_id]['permission'] == permissions_for_sql[1]:
            text = endTime[0]['title1']
        elif chats[chat_id]['permission'] == permissions_for_sql[2]:
            text = endTime[0]['title2']

        # Ask bot new Question
        await send_message_to_bot(chat_id, text, keyboard, context)

    elif chats[chat_id]['permission'] == permissions_for_sql[3] and chats[chat_id]['reason'] == '':
        chats[chat_id]['reason'] = update.message.text
        keyboard = [[telegram.KeyboardButton(day)] for day in days]
        text = '–ö–æ–≥–¥–∞ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏?'

        await send_message_to_bot(chat_id, text, keyboard, context)

    # Ask about time, when worker will in office
    elif chats[chat_id]['timeMinute'] == '':
        await getTime(update, context)

    # Refresh Bot
    else:
        await getPermission(update, context)

    # print(chats[chat_id])


# Test Bot
# application = ApplicationBuilder().token('6709498716:AAEC-0qrS7Vroz22gYN3MYYlvMbqvHKAkLk').build()
# mydb = mysql.connector.connect(
#     host="localhost",
#     user="root",
#     password="",
#     database="botout"
# )

# Production Bot
# application = ApplicationBuilder().token('6533544967:AAFAwmNoJHxRMvchwNsg1VX-NeShnUNhpk0').build()
# mydb = mysql.connector.connect(
#     host="localhost",
#     user="botoutuser",
#     password="Wo7Iikv2eAopIQMa22zd",
#     database="botout"
# )

application = ApplicationBuilder().token('6709498716:AAEC-0qrS7Vroz22gYN3MYYlvMbqvHKAkLk').build()

start_handler = CommandHandler('start', getPermission)
message_handler = MessageHandler(filters.TEXT, messageHandler)

application.add_handler(start_handler)
application.add_handler(message_handler)

# mycursor = mydb.cursor()
application.run_polling()


# import requests

# response = requests.post("https://docs.python-telegram-bot.org/en/v20.7/", data={"name": "sadasd"})
# logging.info(response